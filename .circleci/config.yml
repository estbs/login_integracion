version: 2.1
jobs:
  Initial-setup:
    docker:
      - image: estebanbs/integracion-test:1.0.0
    steps:
      - run:
          name: Initial message
          command: |
            echo 'Continuos delivery and integration masterclass'
            echo 'Starting pipeline'
  Fetch-code:
    docker:
      - image: estebanbs/integracion-test:1.0.0
    steps:
      - checkout
      - run:
          name: Getting the code
          command: |
            echo 'Repository files from Develop branch'
            ls -la
  Get-python-version:
    docker:
      - image: estebanbs/integracion-test:1.0.0
    steps:
      - run:
          name: Get Python Version
          command: |
            python3 --version
  Get-flask-version:
    docker:
      - image: estebanbs/integracion-test:1.0.0
    steps:
      - run:
          name: Get Flask Version
          command: |
            echo 'Get Flask version from app'
  Run-unit-test:
    docker:
      - image: estebanbs/integracion-test:1.0.0
    steps:
      - checkout
      - run:
          name: Run unit test
          command: |
            echo 'Running unit test'
  Run-automation-test:
    docker:
      - image: estebanbs/integracion-test:1.0.0
    steps:
      - run:
          name: Run automation test
          command: |
            echo 'Running automation test'
  Notification-test-environment-updated:
    docker:
      - image: estebanbs/integracion-test:1.0.0
    steps:
      - checkout
      - run:
          name: Send notification to team
          command: |
            echo 'Sending notification to team'
  Update-image:
    docker:
      - image: docker:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Create new Imagen version
          command: |
            ls -la
            cd Integracion
            echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
            docker build -t estebanbs/integracion-test:latest .
            docker push estebanbs/integracion-test:latest
workflows:
  Pipeline-workflow:
    jobs:
      - Initial-setup
      - Fetch-code:
          requires:
            - Initial-setup
      - Get-python-version:
          requires:
            - Fetch-code
      - Get-flask-version:
          requires:
            - Get-python-version
      - Run-unit-test:
          requires:
            - Get-flask-version
      - Run-automation-test:
          requires:
            - Get-flask-version
      - Update-image:
          requires:
            - Run-unit-test
            - Run-automation-test
      - Notification-test-environment-updated:
          requires:
            - Update-image